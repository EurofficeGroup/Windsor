<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <Import Project="..\..\buildscripts\common.props"></Import>

	<PropertyGroup>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageId>Castle.Windsor.Extensions.MsDependencyInjection</PackageId>
		<Title>Castle Windsor extension for .NET Core Dependency Injection </Title>
		<Description>Allows to use Castle Windsor as a container using IServiceProvider</Description>
		<PackageTags>castle, windsor, inversionOfControl, DependencyInjection, aspnet, core</PackageTags>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<NoWarn>$(NoWarn);NU5125</NoWarn> <!-- remove once tools are truly ready for NuGet's new 'license' element -->
		<AssemblyName>Castle.Windsor.Extensions.MsDependencyInjection</AssemblyName>
		<RootNamespace>Castle.Windsor.Extensions.MsDependencyInjection</RootNamespace>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.1.3" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="3.1.3" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Castle.Windsor\Castle.Windsor.csproj" />
	</ItemGroup>
</Project>
